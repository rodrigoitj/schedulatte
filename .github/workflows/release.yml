name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (leave empty to use version from Cargo.toml)"
        required: false
        default: ""

jobs:
  build_and_release:
    name: Build and Release
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Extract version from Cargo.toml
        id: extract_version
        run: |
          $version = (Select-String -Path Cargo.toml -Pattern 'version = "(.*)"').Matches.Groups[1].Value
          if ("${{ github.event.inputs.version }}" -ne "") {
            $version = "${{ github.event.inputs.version }}"
          }
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Build for release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Create release artifacts directory
        run: |
          mkdir release-artifacts
          cp target/release/schedulatte.exe release-artifacts/
          cp config.ini release-artifacts/
          cp tray_light.ico release-artifacts/
          cp tray_dark.ico release-artifacts/
          cp README.md release-artifacts/

      - name: Zip release artifacts
        run: |
          Compress-Archive -Path release-artifacts/* -DestinationPath schedulatte-v${{ steps.extract_version.outputs.VERSION }}.zip

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.extract_version.outputs.VERSION }}
          name: Release v${{ steps.extract_version.outputs.VERSION }}
          files: schedulatte-v${{ steps.extract_version.outputs.VERSION }}.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
